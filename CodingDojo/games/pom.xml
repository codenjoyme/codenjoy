<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.codenjoy</groupId>
    <artifactId>games</artifactId>
    <version>1.1.1</version>

    <packaging>pom</packaging>

    <properties>
        <java.version>11</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <gitDir>${project.basedir}/../../../</gitDir>

        <commons-collections.version>4.4</commons-collections.version>
        <commons-lang.version>3.11</commons-lang.version>
        <org.json.version>20180813</org.json.version> <!-- do not update -->
        <json-io.version>4.10.1</json-io.version>

        <!-- Testing -->
        <hamcrest.version>1.3</hamcrest.version>
        <fest-reflect.version>1.4.1</fest-reflect.version>
        <fest-assert.version>1.4</fest-assert.version>
        <junit.version>4.13.1</junit.version>
        <mockito.version>3.7.7</mockito.version>
        <pitest.version>1.6.4</pitest.version>

        <!-- Maven -->
        <maven-compiler.version>3.8.1</maven-compiler.version>
        <maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
        <maven-resources.version>3.2.0</maven-resources.version>
        <maven-antrun.version>3.0.0</maven-antrun.version>
        <maven-license.version>2.0.0</maven-license.version>
        <maven-source-plugin.version>3.2.0</maven-source-plugin.version>
        <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <maven-buildnumber-plugin.version>1.4</maven-buildnumber-plugin.version>
        <maven-scm-jgit.version>1.11.2</maven-scm-jgit.version>
        <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
        <maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>

        <user.resources>src/main/webapp/resources/user</user.resources>
        <client.sources.file>${module.name}-servers.zip</client.sources.file>
        <client.sources>${user.resources}/${client.sources.file}</client.sources>
        <dojo.package>java/com/codenjoy/dojo</dojo.package>
        <java.client.file>resources/user/java-client.zip</java.client.file>
        <java.client>${project.build.directory}/java-client</java.client>
        <markdown-page-generator.version>2.3.1-codenjoy</markdown-page-generator.version>
    </properties>

    <repositories>
        <repository>
            <id>codenjoy-releases</id>
            <url>https://github.com/codenjoyme/codenjoy-repo/raw/master/snapshots</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <!--  https://stackoverflow.com/questions/14396017/difference-between-repository-and-pluginrepository  -->
        <!--  Maven will resolve plugin dependencies using the configured pluginRepository.
              Other artifact dependencies (eg. a parent pom) are resolved using repository.  -->
        <!--  We need to include <pluginDependency> here for markdown-page-generator-plugin:2.3.1-codenjoy  -->
        <pluginRepository>
            <id>codenjoy-releases</id>
            <url>https://github.com/codenjoyme/codenjoy-repo/raw/master/snapshots</url>
        </pluginRepository>
        <pluginRepository>
            <id>maven-central</id>
            <url>http://central.maven.org/maven2/</url>
        </pluginRepository>
    </pluginRepositories>

    <modules>
        <module>engine</module>
        <module>sample</module>
        <module>sample-text</module>
        <module>a2048</module>
        <module>mollymage</module>
        <module>battlecity</module>
        <module>chess</module>
        <module>collapse</module>
        <module>hex</module>
        <module>loderunner</module>
        <module>minesweeper</module>
        <module>rubicscube</module>
        <module>sudoku</module>
        <module>snake</module>
        <module>snakebattle</module>
        <module>moebius</module>
        <module>football</module>
        <module>startandjump</module>
        <module>quake2d</module>
        <module>pong</module>
        <module>fifteen</module>
        <module>puzzlebox</module>
        <module>spacerace</module>
        <module>kata</module>
        <module>icancode</module>
        <module>expansion</module>
        <module>reversi</module>
        <module>quadro</module>
        <module>lunolet</module>
        <module>tetris</module>
        <module>sokoban</module>
        <module>lemonade</module>
        <module>excitebike</module>
        <module>selfdefense</module>
        <module>japanese</module>
        <module>vacuum</module>
        <module>xonix</module>
    </modules>

    <profiles>
        <profile>
            <id>noGit</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>buildnumber-maven-plugin</artifactId>
                        <version>${maven-buildnumber-plugin.version}</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jar-local</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>${maven-assembly-plugin.version}</version>
                        <configuration>
                            <finalName>${project.artifactId}</finalName>
                            <archive>
                                <manifest>
                                    <addClasspath>false</addClasspath>
                                    <mainClass>com.codenjoy.dojo.Main</mainClass>
                                </manifest>
                            </archive>
                            <descriptors>
                                <descriptor>../local-ws-game-server-jar.xml</descriptor>
                            </descriptors>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jar-with-dependencies</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>${maven-assembly-plugin.version}</version>
                        <configuration>
                            <finalName>${project.artifactId}-exec</finalName>
                            <archive>
                                <manifest>
                                    <addClasspath>false</addClasspath>
                                    <mainClass>com.codenjoy.dojo.${module.name}.client.YourSolver</mainClass>
                                </manifest>
                            </archive>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>engine</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>org.json</groupId>
                <artifactId>json</artifactId>
                <version>${org.json.version}</version>
            </dependency>
            <dependency>
                <groupId>com.cedarsoftware</groupId>
                <artifactId>json-io</artifactId>
                <version>${json-io.version}</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
            </dependency>
            <dependency>
                <groupId>org.easytesting</groupId>
                <artifactId>fest-assert</artifactId>
                <version>${fest-assert.version}</version>
            </dependency>
            <dependency>
                <groupId>org.easytesting</groupId>
                <artifactId>fest-reflect</artifactId>
                <version>${fest-reflect.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-all</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/webapp</directory>
                <includes>
                    <include>**/*</include>
                </includes>
                <excludes>
                    <exclude>**/sprite/**/src/*</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src</directory>
                <includes>
                    <include>license/**</include>
                </includes>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>${maven-buildnumber-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>validate</phase>
                            <goals>
                                <goal>create</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <revisionOnScmFailure>no.scm.config.in.pom</revisionOnScmFailure>
                        <doCheck>false</doCheck>
                        <doUpdate>false</doUpdate>
                        <providerImplementations>
                            <git>jgit</git>
                        </providerImplementations>
                        <scmConnectionUrl>scm:git:</scmConnectionUrl>
                        <scmDirectory>${gitDir}</scmDirectory>
                        <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                        <shortRevisionLength>8</shortRevisionLength>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.scm</groupId>
                            <artifactId>maven-scm-api</artifactId>
                            <version>${maven-scm-jgit.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.apache.maven.scm</groupId>
                            <artifactId>maven-scm-provider-jgit</artifactId>
                            <version>${maven-scm-jgit.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler.version}</version>
                    <configuration>
                        <encoding>utf8</encoding>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <excludes>${maven.test.excludes}</excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources.version}</version>
                    <configuration>
                        <encoding>utf8</encoding>
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>zip</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven-clean-plugin.version}</version>
                    <configuration>
                        <filesets>
                            <fileset>
                                <directory>${user.resources}</directory>
                                <includes>
                                    <include>**/${client.sources.file}</include>
                                </includes>
                                <followSymlinks>false</followSymlinks>
                            </fileset>
                        </filesets>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <configuration>
                        <excludes>
                            <exclude>**/logback.xml</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>unpack</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>unpack</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>${project.groupId}</groupId>
                                        <artifactId>client-java</artifactId>
                                        <version>${project.version}</version>
                                        <type>jar</type>
                                        <outputDirectory>${java.client}</outputDirectory>
                                        <overWrite>true</overWrite>
                                        <includes>${java.client.file}</includes>
                                    </artifactItem>
                                </artifactItems>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven-antrun.version}</version>
                    <executions>
                        <execution>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <target>
                                    <unzip src="${java.client}/${java.client.file}"
                                           dest="${java.client}"/>

                                    <zip destfile="${client.sources}"
                                         basedir="${java.client}"
                                         includes="
                                               src/main/${dojo.package}/client/**,
                                               src/main/${dojo.package}/games/${module.name}/**,
                                               src/main/${dojo.package}/services/**,
                                               src/main/${dojo.package}/*.java,
                                               src/main/java/org/json/*.java,
                                               src/test/${dojo.package}/client/**,
                                               src/test/${dojo.package}/games/${module.name}/**,
                                               src/test/${dojo.package}/services/**,
                                               src/test/${dojo.package}/*.java,
                                               README.*,
                                               mvnw,
                                               mvnw.cmd,
                                               src/license/**,
                                               pom.xml"
                                         update="true"/>

                                    <zip destfile="${client.sources}"
                                         basedir="."
                                         includes="src/main/**"
                                         excludes="src/main/java/**,
                                                src/main/webapp/**,
                                                src/main/resources/**,
                                                **/target/**"
                                         update="true"/>

                                    <!-- используется для отключения DEBUG информации в STDOUT java клиентов -->
                                    <!-- TODO ??? если logback.xml уже есть в игре, то не добавлять пустой (пример expansion) -->
                                    <echo file="./target/stuff/logback.xml" append="false">
                                        <![CDATA[
                                            <configuration></configuration>
                                        ]]>
                                    </echo>
                                    <zip destfile="${client.sources}" update="true">
                                        <zipfileset dir="./target/stuff/" prefix="src/main/resources"/>
                                    </zip>

                                    <copy file="${client.sources}"
                                          todir="target/classes/resources/user"/>
                                </target>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>${maven-license.version}</version>
                    <configuration>
                        <licenseName>gpl_v3</licenseName>
                        <licenseResolver>${project.baseUri}/src/license</licenseResolver>
                        <organizationName>Codenjoy</organizationName>
                        <projectName>Codenjoy - it's a dojo-like platform from developers to developers.</projectName>
                        <inceptionYear>2018</inceptionYear>
                        <canUpdateCopyright>false</canUpdateCopyright>
                        <canUpdateDescription>false</canUpdateDescription>
                        <canUpdateLicense>false</canUpdateLicense>
                        <excludes>
                            <exclude>**/*.json</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>first</id>
                            <goals>
                                <goal>update-file-header</goal>
                            </goals>
                            <phase>process-sources</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.ruleoftech</groupId>
                    <artifactId>markdown-page-generator-plugin</artifactId>
                    <version>${markdown-page-generator.version}</version>
                    <configuration>
                        <inputDirectory>${basedir}/src/main/webapp/resources/help</inputDirectory>
                        <inputEncoding>UTF-8</inputEncoding>
                        <outputEncoding>UTF-8</outputEncoding>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.pitest</groupId>
                    <artifactId>pitest-maven</artifactId>
                    <version>${pitest.version}</version>
                    <configuration>
                        <targetClasses>
                            <param>com.codenjoy.dojo.${module.name}.*</param>
                        </targetClasses>
                        <targetTests>
                            <param>com.codenjoy.dojo.${module.name}.*</param>
                        </targetTests>
                        <reportsDirectory>${project.basedir}/pitest/</reportsDirectory>
                    </configuration>
                    <executions>
                        <execution>
                            <id>pitest</id>
                            <goals>
                                <goal>mutationCoverage</goal>
                            </goals>
                            <phase>test</phase>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>