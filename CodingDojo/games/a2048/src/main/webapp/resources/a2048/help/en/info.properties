###
# #%L
# Codenjoy - it's a dojo-like platform from developers to developers.
# %%
# Copyright (C) 2012 - 2022 Codenjoy
# %%
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program.  If not, see
# <http://www.gnu.org/licenses/gpl-3.0.html>.
# #L%
###
game.a2048.element._x                      =An obstacle through which the chips do not pass.
game.a2048.element._2                      =Number 2. Will unite on the field only with the same chips, the result will be a chip with number 4, so 2+2=4.
game.a2048.element._4                      =Number 4. 4+4=8.
game.a2048.element._8                      =Number 8. 8+8=16.
game.a2048.element._16                     =Number 16. 16+16=32.
game.a2048.element._32                     =Number 32. 32+36=64.
game.a2048.element._64                     =Number 64. 64+64=128.
game.a2048.element._128                    =Number 128. 128+128=256.
game.a2048.element._256                    =Number 256. 256+256=512.
game.a2048.element._512                    =Number 512. 512+512=1,024.
game.a2048.element._1024                   =Number 1,024. 1k+1k=2k.
game.a2048.element._2048                   =Number 2,048. 2k+2k=4k.
game.a2048.element._4096                   =Number 4,096. 4k+4k=8k.
game.a2048.element._8192                   =Number 8,192. 8k+8k=16k.
game.a2048.element._16384                  =Number 16,384. 16k+16k=32k.
game.a2048.element._32768                  =Number 32,768. 32k+32k=64k.
game.a2048.element._65536                  =Number 65,536. 64k+64k=128k.
game.a2048.element._131072                 =Number 131,072. 128k+128k=256k.
game.a2048.element._262144                 =Number 262,144. 256k+256k=512k.
game.a2048.element._524288                 =Number 524,288. 512k+512k=1M.
game.a2048.element._1048576                =Number 1,048,576. 1M+1M=2M.
game.a2048.element._2097152                =Number 2,097,152. 2M+2M=4M.
game.a2048.element._4194304                =Number 4,194,304. 4M+4M=8M.
game.a2048.element.NONE                    =Empty space.

game.a2048.settings.BREAKS_EXISTS          =With breaks mode
game.a2048.settings.BREAKS_NOT_EXISTS      =Without breaks mode
game.a2048.settings.NEW_NUMBERS_IN_CORNERS =Classic (corner only) mode
game.a2048.settings.NEW_NUMBERS_IN_RANDOM  =With random numbers mode
game.a2048.settings.SIZE                   =[Level] Size
game.a2048.settings.NEW_NUMBERS            =[Game] New numbers
game.a2048.settings.NUMBERS_MODE           =[Game] Numbers mode
game.a2048.settings.BREAKS_MODE            =[Game] Breaks mode
game.a2048.settings.LEVEL_MAP              =[Level] Level map
game.a2048.settings.SCORE_COUNTING_TYPE    =[Score] Counting score mode
