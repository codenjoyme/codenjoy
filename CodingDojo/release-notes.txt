2011-10-21
    Sanke: Реализована игрушка в консольном ее варианте как пример разработки через тесты
2011-10-24
    Snake: Улучшена логика игры + рефакторинг
2012-09-30
    Snake: Проект переведен под maven структуру
    Snake: Проработана логика появления нового камня и яблока
    Snake: Начало интеграции проекта в Codenjoy
2012-10-01
    Snake: Добавлена админка и клиент

...


2016-06-24
    Исправил джойстик, теперь его можно отключать в любое время динамически, например если фокус ввода в поле для ввода на страничке юзера (редактор, чат). Отключается так game.enableJoystick = true/false
    Сделал чтобы количество цветов-спрайтов было больше, чем 34, сейчас их ~ 34 + 21
    Релизовал возможность прорисовывать туман войны, для этого надо создать спрайт с именем FOG и добавить его в Elements игры
    Добавил воспомагательный класс lengthToXY.Map для быстрого оперирования текстовыми картами
2016-06-25
    Реализовал возможность через пропертис файл подменять что будет отображаться на главной страничке. Удобно если надо вставить свой лендинг.
    Исправио ошибку с GuiPlotColorDecoder - тест врешился
2016-06-27
    Зарелизил версию 1.0.1
    Выделил в codenjoy.properties файл флаг отвечающий за верификацию имейла (отправка письмо подтверждения)
    Реализовал возможность сторить об юзере дополнительную информацию в момент регистрации
2016-07-03
    Опубликовал проект под GNU GPL v3. Мейвен автоматически прописывает шапки во всех новых файлах.
    Вынес в properties настройки отправки email
    Вынес в properties настройки donate кошелька
    Лицензия добавляется во все места, где встречаются исходники: джарники игор, енджина, варник коденжоя, клиентские сырцы
2016-07-05
    Исправил мелкие ошибки в тестах и скриптах
    Обновил все зависимости до максимально возможных последний версий либ, повыделял все версии в пропертис
    Зарелизил версию 1.0.3
2016-07-11
    Релизовал возможность прорисовывать подложку под спрайтами, для этого надо создать спрайт с именем BACKGROUND и добавить его в Elements игры
    Выделил в codenjoy.properties путь к форме регистрации
    Зарелизил версию 1.0.4
2016-07-21
    Разделил скрипт на две части, одна - отправка запроса за бордой на сервер, а вторая - отрисовка его на канве.
    Реализовал возможность сохранять вместе с основной информацией о плеере так же дополнтельную, а так же поднимать из сейва игру с этой инфой
    Зарелизил версию 1.0.5
2016-07-22
    Сделал layout.js более роасширяемым, чтобы моджно было кастомизировать что во что инджектим
    Зарелизил версию 1.0.6
2016-07-29
    Обновил библиотеку jquery на 3.1.0 версию и исправил все найденные ошибки связанные с этим переходом
    Добавил документацию по запуску codenjoy на локали
    Изменил батники для запуска проекта
    Исправил автоматическую загрузку бота, в случае перестарте сервера
    Удалил старый стиль ломавший страничку help
    Убрал старый console.log
    Зарелизил версию 1.0.7
    Обновил спрайты у змейки
    Обновил документацию в корне проекта и в папке с Maven репозиторием
    Добавил сырцы игрушки a2048-extremme
    Обновил помник сапера, чтобы из за либы с ботом не слетал
    Остаивил проперти по умолчанию, чтобы не надо было валидировать по почте
    Переместил how to play подальше от чата. Если чат включен, то прикрепляется над ним, если выключен то под лидербордом
    Добавил везде fork me on github, он отключется вместе с info панелью флагом game.enableInfo
2016-08-02
    Добавил в каждый проект репозиторий, на случай, если либа не будет установлена
    Удалил генерируемые zip файлы и добавил их в игнор лист
    Изменил стили, чтобы ForkMe не накрывала табличку лидерборда
    Клиента змейки пофиксил, теперь он кидает NPE когда змея врезается в стенку
    Зарелизил версию 1.0.8
2016-08-03
    Добавил игнорирование ошибки копирования либы engine чтобы не валился билд клиента
    Сделал возможным поменять количество миллисекунд для LocalGameRunner
    Добавил в змейку SolverTest для удобства тестирования играющих
    Добавил в борде змейки возможность определять не настал ли конец игры
    Добавил в профайлер дополнительный метод для отладки
    Исправил ошибку в Алгоритме поиска кратчайшего пути и написал на него тест
    Реализовал в змейке AI-алгоритм на основе общего алгоритма поиска кратчайшего пути
    Исправил несколько AI алгоритмов
    Исправил логику загрузки AI из сейва, из за этой баги подвисал сервер
    Сделал чтобы дифолтовый бот Sample раставлял бомбы
    Пофиксил первую перерисовку борды, которая иногда не подгружалась из за того, что спрайты не закешированы в браузере
    Реализовал на админке отображение тех плееров, которые играют в выбранную на админке игру
    Сделал, чтобы на админке напротив имени игры подсвечивалось, сколько плееров играет сейчас
    Зарелизил версию 1.0.9
2016-08-04
    Добавил на админку версию игры взятую из билда мейвена
    Зарелизил версию 1.0.10
2016-08-13
    Сделал возможным использовать две базы: postgresql и sqlite. Первая нужна для продакшена, вторая нормально будет для запуска на локали. Базы переключаются путем подмены applicationContext-database.
    Исправил некоторые ошибки с подвисанием при использовании sqlite во время рикординга игры.
    Выделил в properties коннекшен к базе данных
    Игры во всех списках посортированы по алфавиту
2016-08-14
    Добавил контроллер для сохранения специфических для игры данных - настроек
2016-08-15
    Зарелизил версию 1.0.11
2016-08-26
    Сделал возможным указывать порядок спрайтов к отрисовке в многослойном режиме
2016-08-29
    Изменил алгоритм загрузки спрайтов, теперь инфа грузится через ajax
    Добавил загрузку контекста через ajax
    Добавил загрузку информации об игре через ajax
    Добавил проверку регистрации пользователя через ajax
    Релизовал загрузку списка юзеров через ajax, от jsp не остается и следа! Подключил новую либину, для работы с html темплейтами через jQuery
    Замахнулся на форму регистрации, но то еще тот кусок. Оставил на потом. Хватит уже, я сегодня хотел только померджить в мастер немного :) Зато чуть скрипты поправил, была бага с либами
    Сделал так, чтобы не рифрешислась страничка при добавлении нового пользователя, а только обновлялся контент
    Сделал, чтобы удаление и добавление пользователя не приводило к перезагрезке всей борды
    Админка теперь не сохраняет в url браузера последнее действие
    Добавил возможность менять набор спрайтов как тему игры
    Зарелизил версию 1.0.12
2016-09-22
    Реализовал возможность в клиенте работать с несколькими слоями борды
    Зарелизил версию 1.0.13
2016-09-30
    Исправил глюк с /n при построении борды
    Сделал так, чтобы состояние борды приходило как полноценный JSON а не JSON строки в другом JSON - из за чего приходилось парсить дополнительно на клиенте.
    Сделал более читабельное сохранение дат в таблицы обоих типов (PostgreSQL и SQLite), что привело к тому что чаты не сохраняются многократно (пофиксил багу)
    Теперь прорисовка имен так же правильно отображается не только в однопользовательской, многопользовательской, но и в миксованной игре.
    Исправил загрузку контекста, что порой приводило к белому экрану
    Сделал возможным изменять стили рисования подписи к игроку. Некрасиво, но пока так.
    Зарелизил версию 1.0.14
    Сделал так, чтобы имена отрисовывались в нужном порядке, причем можно было указывать хочу ли я выводить все имена или только текущий
2016-10-12,13
    Добавил документацию
    Зарелизил версию 1.0.15
    Сделал чтобы джойстик всегда работал и можно было по хоткею его включать и выключать
    Добавил кнопку перехода на лидерборд страничку
2016-10-14
    Зарелизил версию v1.0.16
2016-10-30
    Исправил AbstractBoard так что теперь она ищет на всех леерах после PullRequest, добавил тестов
    Реализовал возможность отправлять от имени пользователя дополнительную информацию, ровно как информацию о том, какая у него сейчас игра однобордовая или многобордовая
    Прооптимизировал отправку данных юзеру
    Последний фикс скрипта, теперь игры которые поддерживают однобордовые и многобордовые варианты могут отображать имена юзеров нормально
2016-11-12
    Добавил проект с утилитами которые помогут билду проекта. Проект решил сделать на груви
    Зарелизил версию v1.0.17
2016-11-23
    Сделал fork me чтобы на локали был
    Реализовал возможность создавать игры в текстовом формате, на эту тему так же реализовал SampleText
    Зарелизил версию v1.0.18
2016-12-15
    Исправил ошибку с текстовыми и графическими типами игор. Спрайты не прорисовывались.
    Зарелизил версию v1.0.19
2017-02-14
    Зарелизил версию v1.0.20 с игрушкой SnakeBattle от Ильи Корсикова (mailto:kors.ilya@gmail.com)
2017-02-26
    Создал скрипт для перезапуска сервера codenjoy.com
    На его основе сделал sprint boot приложение (1.5v на 1.8v java) которое позволяет бегать на консольку, логиниться с селениумом и ресетить сервак. Так же настроил логгирование.
2017-02-28
    Применил новый pull request по выделению дублирующегося кода из pom.xml игрушек и адаптировал его под реалии проекта
    Порефакторил запуск всех Solvers. Добавил возможность легко запускать клиента на локальном сервере
    Упростил добавление сырцов енджина для случая, когда нет инета во время турнира.
2017-03-02
    KataCodenjoy: Сделал заготовку на основе text-sample для новой игры KataCodenjoy
2017-03-04
    KataCodenjoy: Реализовал проверку всех тестов на
    KataCodenjoy: Протестили на клиенте - реализовали парсинг ответов
    KataCodenjoy: Сделали хорошее форматирование
    KataCodenjoy: Хистори надо как-то ограничивать, потому что очень много инфы приходит и это может лагать сетку. Мы ему передаем только последнюю транзакцию
    KataCodenjoy: Реализован набор задач-алгоритмов
    KataCodenjoy: Исправил кодировку в рускоязычном опсиании задач на UTF8
    KataCodenjoy: Упростил код алгоритмов
    KataCodenjoy: Если у нас первая задача решена, тогда включаются вопросы из второй
2017-03-05
    KataCodenjoy: Иcправлен KataPerformanceTest
    KataCodenjoy: Описание дескрипшена уровня выдавать клиенту в input JSON
    KataCodenjoy: Реализован ApofigAI чтобы он по всем классам бегал и давал правильные ответы
    KataCodenjoy: В хистори было видно только последний ответ, когда игра закончилась
2017-03-10
    KataCodenjoy: Прогрумил, что дальше кодить собрался
    KataCodenjoy: Добавил помники для инсталяции approvals
    Подфиксил snake-battle игру под новую структуру pom'ов
2017-03-14
    Добавил урляку репозитория в каждый помник игры, чтобы клиент нормально тянул депенденси
    Чуть исправил вывод в файл, теперь окно не закрывается - надо кликнуть для завершение кнопкой + рошибки тоже будут выводиться в файл.
    Обновил апдейтор версий - добавился новый файл для апдейта
    Merge branch 'master' into kata-codenjoy-game
    KataCodenjoy: За каждый пройденный подряд зеленый тест начисляем +1 очко
    KataCodenjoy: Исправил старые тесты
    KataCodenjoy: За каждый решенный алгоритм по умолчанию давать очкки равные 100
    KataCodenjoy: Подписал авторство алгоритмов. Добавили тудушки
    Поменял версию на v1.0.21 с kata codenjoy и другими merge request сделанными до сих пор
    Исправили ошибку в тестах после добавленяи авторства.
    KataCodenjoy: Обновил версию approvals но это не помогло, потому просто закоментировал тесты, позже разберемся.
    Периодически слетает тест, чуть увеличил диапазон
    Исправил батник для публикации deplySnapshot - Так удобнее деплоить
    KataCodenjoy: Рефакторинг задач-алгоритмов
    Навел порядок с json сортировками, а то тесты под маком слетают и у меня тоже при деплое. Пришлось немного костылировать org.json пакет, но лицензия вроде как разрешает.
    KataCodenjoy: Добавил игру в билдер и сделал ей отдельное имя, чтобы в меню показывалась
    KataCodenjoy: Подвел формат данных к тому, что может воспроизвести фронтенд
    Сделал canvases-text js конфигурируемым, чтобы клиент сам мог определять как ему печатать вопросы.
    KataCodenjoy: Сделал небольшой фикс в солвере для проверки ошибочных кейзов
    KataCodenjoy: Исправил случай, когда клиент не отвечает, и выводится последний вопрос дважды
    KataCodenjoy: При переходе на новый уровень первый вопрос показывать на чистом листе
2017-03-15
    KataCodenjoy: Починил тест Solver
    KataCodenjoy: Сделал, чтобы при клике на уровень выводился алерт с описанием уровня, и при этом текст юникода отображался
    Теперь уровень не достояние Player (серверного) а передается в HeroData если того захочет игра
    KataCodenjoy: Исправил описание алгоритмов
    KataCodenjoy: Перенес эскейпинг/анэкскейпинг на уровень выше.
    KataCodenjoy: В описании теперь значится и название алгоритма.
    KataCodenjoy: AIСолвер исправлен с учетом этой особенности.
    KataCodenjoy: JS Alert выводит все со \n
    KataCodenjoy: Удалил дублирующиеся тесты
    Исправил описания Readme.md всех игрушек
    SampleText: Исправил папку с ресурсами
    Исправил все readme игр и добавил их в git
    Убил копирование библиотек из libs для игрушек - это уже не используется
    Обновил этот release notes файл
    Engine.pom теперь так же собирает в zip с либами и games.pom
    Протестил проект на mollymage, kata, 2048 и sample-text
    KataCodenjoy: Исправил клиента, а то by default выдает исключение
    SampleText: Исправил папку с ресурсами чтобы pom.xml копировал сырцы
    KataCodenjoy: Исправил описание игры kata.html
    Исправил описание всех игр - добавил блок про опенсорсность и кому присать в случае чего, а так же более детально рассказал про подключение по вебсокетам
    Заменил в проекте табы 4мя пробелами
    Все изменения до сих пор опубликованы как v1.0.21
    Все последующие изменения будут видны как v1.0.22 (ее пока не релизил)

...

2018-07-01
    Рефакторинг: Выделил часть логики из PSI + PlayerGames функциональности по созданию новой игры задангого типа для игрока в MultiplayerService
        Теперь типов многопользовательских игр может быть не две SINGLE/MULTIPLE, а несколько - каждый на своей борде, все на одной, двое на борде, трое, четверо...
    Подготовка к большому рефакторингу по разделению игры на составляющие: gameField, gamePlayer, printer
2018-07-05
    Большой рефакторинг по разделению игры на составляющие: gameField, gamePlayer, printer + Добавлен smoke test
        Engine
        Kata
        a2048
        Battlecity
        MollyMage
    Рефакторинг: LocalGameRunner стал реюзаемым + тесты
2018-07-06
    Большой рефакторинг по разделению игры на составляющие: gameField, gamePlayer, printer + Добавлен smoke test
        Chess
        Collapse
        Fifteen
        Football
        Hex
        Kata
        Loderunner
        Minesweeper
        Moebius
    Добавлен SmokeTest для некоторых игр, которые уже приведены к новому интерфейсу
    Рефакторинг: Для всех игр используется getDice() из AbstractGameType
    Сделал возможным задавать количество игроков на карте через MultiplayerType
    Клон игры a2048 a2048-extreme удален польностью
2018-07-07
    Рефакторинг: Обновил QDirection добавив новых методов и тестов
    Теперь LocalGameRunner умеет создавать многопользовательские игры и более умный по части вывода информации
    Большой рефакторинг по разделению игры на составляющие: gameField, gamePlayer, printer + Добавлен smoke test
        Pong
2018-07-08
    Большой рефакторинг по разделению игры на составляющие: gameField, gamePlayer, printer + Добавлен smoke test
        PuzzleBox
    Pефакторинг: LocalGameRunnerTest
    Pефакторинг: BoardReader.elements для всех игрушек
2018-07-12
    Большой рефакторинг по разделению игры на составляющие: gameField, gamePlayer, printer + Добавлен smoke test
        Quake2D
        RubicsCube
        Sample
        SampleText
        Snake
2018-07-13
    Большой рефакторинг по разделению игры на составляющие: gameField, gamePlayer, printer + Добавлен smoke test
        SnakeBattle
        SpaceRace
        StartAndJump
        Sudoku
        CodenjoyServer
    Наспех исправлены все выявленные на этот момент ошибки
    Зарелизил версию v1.0.25 для завтрашнего JuJa Hackenjoy
2018-07-14
    Reversi: Проработка движка игрушки на JuJa Hackenjoy
2018-07-15
    Reversi: Доработка игрушки: AI, клиент, правила игры, начисление очков, отрисовка спрайтов
    Reversi: Добавлено препятствие на которое нельзя ставить фишки
    Reversi: Игра интегрирована в общий репозиторий
2018-07-14...2018-07-18
    Quadro: Активная разработка игры
2018-06-21...2018-08-09
    Lunolet: Активная разработка игры
2018-07-19
    Quadro: Большой рефакторинг игры в процессе CodeReview
2018-08-06
    Реализована возможность через параметры mvn команды сборки builder собирать его с теми или иными (или со всеми) игрушками (реализовано через профайлы)
    Реализован DockerFile со скриптом для поднятия сервера с заданным набором игрушек (или всеми)
2018-08-08
    Snake: Очки насчитываются правильно после того как змейка очистили очки (длинна змейки так же уменьшается)
    Добавлен скрипт для билда Codenjoy с нуля под windows (portable)
    Разукрашен "portable" скрипт
2018-08-09
    Переименован Readme в корне git maven repository
    Теперь сервер можно запускать под разными контекстами а не только codenjoy-contest (переделаны клиенты, сервер, UI, portable и docker сборки)
    Обновлен год лицензии Codenjoy во всех файлах на 2018
    Quadro: Рефакторинг и интеграция игры под новые интерфейсы Codenjoy
    Quadro: Игра интерирована в общий репозиторий
    Quadro: Исправлена ошибка - если оба игрока походят в одну клетку, то на поле появятся две фишки
    Quadro: Описаны правила игры
    Исправлены опечатки во всех описания вих игрушек
    Во всех описаниях всех игрушек сверху размещена информация о контрибьюшене (раньше она была внизу)
    В описаниях игр так же обновляется контекст в зависимости от того куда задеплоили игру
    Исправил, чтобы у клеинта не был засорен sl4j log DEBUG сообщениями
2018-08-10
    Удалена старая реализация коммуникации борды из браузера и сервера на Asynk - мы уже давно ее не используем, все стабильно работает на WebSockets
    Рефакторинг: Tickable содержит default метод quietTick
    Рефакторинг: Вынес часть метода tick из PlayerGames в MultiplayerServiceImpl чтобы затем усложнить эту логику
    Добавлен тест MultiplayerServiceImpl для разных типов одно-/многопользовательской игры
    Большой рефакторинг: Теперь тикается только GameField а из Game/Single метод был убран
    Реализован функциональный тест PSI (без MockHell)
    Чат удален полностью из Codenjoy
    Большой рефакторинг: Выпливал старый мертвый код. Архитектура подсчтеа очков у нас иная, потому нечего в плеере очки считать!
    Рефакторинг: WebSockerRunner
    Рефакторинг: Все AI переименованы в общий вид AISolver
    Появляется возможность тушить по запросу запущенные AI
2018-08-15
    Поменял архитектуру добавления ботов к игре, теперь GameRunner не создает игру самостоятельно, а предоставляет только классы - PSI теперь создает AI если надо. Так же сделал, чтобы AI привязывался к Player и сносился, когда плеера удаляем с админки
    Рефакторинг dao/jdbc с использованием stream api и lambda expression
    Quadro: Исправил ошибку. Игра не должна тикаться, пока не начали игру все участники
    Рефакторинг WebsocketRunner
    Сделал, чтобы разные приложения работающие под разными контекстами писали в разные файлы SQLite
2018-08-16
    Удален модуль Statistics полностью
    Рефакторинг PlayerGames - использован stream api
    Рефакторинг LazyJoystick
2018-08-17
    Рефакторинг PlayerGames - устранен MultiplayerService
    Добавлен тест LinkService
2018-08-18
    Рефакторинг PlayerGames
    Окончательно проработана логика удаления игрока из многопользовательской игры
2018-08-19
    Тест для проверки multiplayer версий игр написан с использованием DSL + дописаны тесты для всех существуюищх типов singleplayer/multiplayer
2018-08-20
    Lunolet: Игра интерирована в общий репозиторий из http://github.com/nzeemin/codenjoy.git
    Lunolet: Рефакторинг и интеграция игры под новые интерфейсы Codenjoy
    Добавлена возможность переопределять canvases.js - фреймворк будет искать в игре файл canvases-<game>.js и в нем метод initCanvasesGame его и вызовет вместо текстового/графического canvases работающих по-умолчанию
    Lunolet: Исправлена ошибка - Оказывается String.format для double зависит от локали
2018-08-21
    Исправлена ошибка при переходе по хоткею Ctrl-Alt-A,D с MainPage на админку с NPE
    На видно для какого пользователя загружен AI
    Можно загрузить AI от имени любого пользователя с админки
    PSI начинал тикаться таймером раньше, чем поднималось приложение решался вебсокетклиент инициализатор (PlayerSocketCreator). Из за этого AI не стартовал при старте сервера из сейвов. Пришлось TimerService держать на паузе пока PlayerSocketCreator не инициализируется
2018-08-22
    Исправлена ошибка в многопользовательской игре - при загрузке AI под играбщим клиентом из админки страничка борды в браузере должна продолжать работать
    Дополнено это описание из Git History
    Начата интеграция Tetris в Codenjoy
    Если элемент к отрисовке находитя за пределами борды, то его игнорим чтобы небыло IOBE
    Перенес новый Solver в Engine - думаю он еще пригодится кому-то
2018-08-23
    Добавлена функциональность SelectBox на AdminPage. Вместе с этим в тетрисе появилась первая реализация этой фичи
    Добавлена функциональность CheckBox на AdminPage - он умеет работать с разными комбинациями типов: String, Boolean, Integer и даже с parset. Дописаны тесты и проведен рефакторинг
    Tetris интегрирован в общий репозиторий
    Зарелизил версию v1.0.26

...

2020-02-07
    [readme] Исправил линки в документации Readme.md на сабрепозитории со скриптами (была ошибка)
    [snake][score] Наряду с классическим способом подсчета очков Score, добавлен новый maxScore. Пока что этa настройка работает только, если удалить всех игроков и снова загрузить а надо сделать, чтобы reset all boards кнопка триггерила это тоже. В туду и доработать потом. MaxScore - Запоминается только максимальное количество очков во всех раундах, рассчитываемое из текущей длинны змеи. Поедание камней и суицид не уменьшает количество очков. Полезно в онлайн турнире, когда сложно собрать всех воедино для финала. Score - Классический подсчет очков, где очки постоянно агреггируются от игре к игре. "Инкриз" очков рассчитывается из текущего размера змеи в момент съедания яблока. Тогда как камень укорачивает только длинну (-10), ровно как и суицид (до 2х). В нконтролирруемой по времени игре побеждает тот, кто дольше играл, если это не ок - стоит выбирать MaxScore стратегию подсчета очков. Включается та или иная стратегия на админке путем установки настройки игры "Max score mode" в true/false. Так же проведен рефакторинг кода и тестов.
    [excitebike] Добавил новую игру в формате сабрепозитория
    [portable][linux] Так как теперь и игры будут в сабрепозиториях, надо сделать скрипт поднятия сервера учитывающим это
    [mollymage][client][java] Реализовал возможность проверять что вокруг меня по маске. Это нужно для реализации клиента на псевдо языке программирования для непрограммирующих ребят
    [engine] У Direction появился метод isValid для определения валидности строкового представления
    [mollymage][client][pseudo] Теперь вся загрузка рулов идет из файла
    [mollymage][client][pseudo] Добавил валидации на паттерн и на Direction в Rules.txt
    [mollymage][client][pseudo] Основной файл с правилами называется main.rule и его местоположение задается при запуске Main класса. Добавлена валидация на то что файл существует. Так же добавлена валидация на некоторые кейзы неправильного формат файла.